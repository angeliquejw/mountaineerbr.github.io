<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>~/www/mountaineerbr.github.io/blog/res/script2.txt.html</title>
<meta name="Generator" content="Vim/8.2">
<meta name="plugin-version" content="vim8.1_v2">
<meta name="syntax" content="bash">
<meta name="settings" content="number_lines,use_css,pre_wrap,no_foldcolumn,expand_tabs,line_ids,prevent_copy=,use_input_for_pc=fallback">
<meta name="colorscheme" content="none">
<style>
<!--
pre { white-space: pre-wrap; font-family: monospace; color: #ffffff; background-color: #000000; }
body { font-family: monospace; color: #ffffff; background-color: #000000; }
* { font-size: 1.1em; }
.LineNr { color: #ffff00; }
.Comment { color: #00ffff; }
.Constant { color: #ff40ff; }
.Special { color: #ffd7d7; }
.Identifier { color: #00ffff; font-weight: bold; }
.Statement { color: #ffff00; }
.PreProc { color: #5fd7ff; }
-->
</style>

<script>
<!--

/* function to open any folds containing a jumped-to line before jumping to it */
function JumpToLine()
{
  var lineNum;
  lineNum = window.location.hash;
  lineNum = lineNum.substr(1); /* strip off '#' */

  if (lineNum.indexOf('L') == -1) {
    lineNum = 'L'+lineNum;
  }
  var lineElem = document.getElementById(lineNum);
  /* Always jump to new location even if the line was hidden inside a fold, or
   * we corrected the raw number to a line ID.
   */
  if (lineElem) {
    lineElem.scrollIntoView(true);
  }
  return true;
}
if ('onhashchange' in window) {
  window.onhashchange = JumpToLine;
}

-->
</script>
</head>
<body onload='JumpToLine();'>
<pre id='vimCodeElement'>
<span id="L1" class="LineNr">  1 </span><span class="Comment">#!/bin/bash</span>
<span id="L2" class="LineNr">  2 </span><span class="Comment"># make HTML posts from sources</span>
<span id="L3" class="LineNr">  3 </span><span class="Comment"># concatenate posts</span>
<span id="L4" class="LineNr">  4 </span><span class="Comment"># v0.2  sep/2020  mountaineerbr</span>
<span id="L5" class="LineNr">  5 </span>
<span id="L6" class="LineNr">  6 </span><span class="Comment">#blog directory structure</span>
<span id="L7" class="LineNr">  7 </span><span class="Comment">#post directories start with a number /[0-9]* .</span>
<span id="L8" class="LineNr">  8 </span><span class="Comment">#the post directory must hold an i.html file, which</span>
<span id="L9" class="LineNr">  9 </span><span class="Comment">#contains aditional metatags within &lt;head&gt; tags and</span>
<span id="L10" class="LineNr"> 10 </span><span class="Comment">#the post article itself within &lt;article&gt; tags.</span>
<span id="L11" class="LineNr"> 11 </span><span class="Comment">#ex: blogRootDir/1/i.html</span>
<span id="L12" class="LineNr"> 12 </span>
<span id="L13" class="LineNr"> 13 </span><span class="Comment">#i.html files are processed and generate index.html files</span>
<span id="L14" class="LineNr"> 14 </span><span class="Comment">#at the same directory of i.html files.</span>
<span id="L15" class="LineNr"> 15 </span><span class="Comment">#all articles are then concatenated to cat.html at the blog root directory.</span>
<span id="L16" class="LineNr"> 16 </span><span class="Comment">#previously generated files are replaced with new ones.</span>
<span id="L17" class="LineNr"> 17 </span>
<span id="L18" class="LineNr"> 18 </span><span class="Comment">#src objects in local relative directory are fixed.</span>
<span id="L19" class="LineNr"> 19 </span><span class="Comment">#resource direcory is at blogRootDit/res/</span>
<span id="L20" class="LineNr"> 20 </span>
<span id="L21" class="LineNr"> 21 </span>
<span id="L22" class="LineNr"> 22 </span><span class="Comment">#defaults</span>
<span id="L23" class="LineNr"> 23 </span>
<span id="L24" class="LineNr"> 24 </span><span class="Comment">#blog root</span>
<span id="L25" class="LineNr"> 25 </span><span class="Identifier">ROOT</span>=<span class="Statement">&quot;</span><span class="PreProc">$HOME</span><span class="Constant">/www/mountaineerbr.github.io/blog</span><span class="Special">&quot;</span>
<span id="L26" class="LineNr"> 26 </span>
<span id="L27" class="LineNr"> 27 </span><span class="Comment">#template files</span>
<span id="L28" class="LineNr"> 28 </span><span class="Identifier">TEMPLATE_POSTTOP</span>=<span class="Statement">&quot;</span><span class="PreProc">$ROOT</span><span class="Constant">/post.template.top.html</span><span class="Special">&quot;</span>
<span id="L29" class="LineNr"> 29 </span><span class="Identifier">TEMPLATE_POSTBOTTOM</span>=<span class="Statement">&quot;</span><span class="PreProc">$ROOT</span><span class="Constant">/post.template.bottom.html</span><span class="Special">&quot;</span>
<span id="L30" class="LineNr"> 30 </span><span class="Identifier">TEMPLATE_CATTOP</span>=<span class="Statement">&quot;</span><span class="PreProc">$ROOT</span><span class="Constant">/cat.template.top.html</span><span class="Special">&quot;</span>
<span id="L31" class="LineNr"> 31 </span><span class="Identifier">TEMPLATE_CATBOTTOM</span>=<span class="Statement">&quot;</span><span class="PreProc">$ROOT</span><span class="Constant">/cat.template.bottom.html</span><span class="Special">&quot;</span>
<span id="L32" class="LineNr"> 32 </span>
<span id="L33" class="LineNr"> 33 </span><span class="Comment">#set resulting cat.html filepath</span>
<span id="L34" class="LineNr"> 34 </span><span class="Identifier">TARGETCAT</span>=<span class="Statement">&quot;</span><span class="PreProc">$ROOT</span><span class="Constant">/cat.html</span><span class="Special">&quot;</span>
<span id="L35" class="LineNr"> 35 </span>
<span id="L36" class="LineNr"> 36 </span>
<span id="L37" class="LineNr"> 37 </span><span class="Comment">#start</span>
<span id="L38" class="LineNr"> 38 </span>
<span id="L39" class="LineNr"> 39 </span><span class="Comment">#test target files exist</span>
<span id="L40" class="LineNr"> 40 </span><span class="Comment">#changing to $ROOT is required!</span>
<span id="L41" class="LineNr"> 41 </span><span class="Statement">cd</span> <span class="Statement">&quot;</span><span class="PreProc">$ROOT</span><span class="Statement">&quot;</span> || <span class="Statement">exit</span> <span class="Constant">1</span>
<span id="L42" class="LineNr"> 42 </span>
<span id="L43" class="LineNr"> 43 </span><span class="Comment">#check for template files</span>
<span id="L44" class="LineNr"> 44 </span><span class="Statement">for</span> t <span class="Statement">in</span> <span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_CATTOP</span><span class="Statement">&quot;</span> <span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_CATBOTTOM</span><span class="Statement">&quot;</span> <span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_POSTTOP</span><span class="Statement">&quot;</span> <span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_POSTBOTTOM</span><span class="Statement">&quot;</span>
<span id="L45" class="LineNr"> 45 </span><span class="Statement">do</span>
<span id="L46" class="LineNr"> 46 </span>        <span class="Statement">if </span><span class="Special">[[</span> <span class="Statement">!</span> <span class="Statement">-f</span> <span class="Statement">&quot;</span><span class="PreProc">$t</span><span class="Special">&quot;</span> <span class="Special">]]</span>
<span id="L47" class="LineNr"> 47 </span>        <span class="Statement">then</span>
<span id="L48" class="LineNr"> 48 </span>                <span class="Statement">echo</span><span class="Constant"> </span><span class="Statement">&quot;</span><span class="Constant">template file missing -- </span><span class="PreProc">$t</span><span class="Special">&quot;</span><span class="Constant"> </span><span class="Statement">&gt;</span><span class="Statement">&amp;</span><span class="Constant">2</span>
<span id="L49" class="LineNr"> 49 </span>                <span class="Statement">exit</span> <span class="Constant">1</span>
<span id="L50" class="LineNr"> 50 </span>        <span class="Statement">fi</span>
<span id="L51" class="LineNr"> 51 </span><span class="Statement">done</span>
<span id="L52" class="LineNr"> 52 </span><span class="Statement">unset</span><span class="Identifier"> t</span>
<span id="L53" class="LineNr"> 53 </span>
<span id="L54" class="LineNr"> 54 </span>
<span id="L55" class="LineNr"> 55 </span><span class="Comment">#make an array with post filepaths</span>
<span id="L56" class="LineNr"> 56 </span><span class="Statement">while </span><span class="PreProc">IFS</span><span class="Statement">=</span><span class="Statement">  </span><span class="Statement">read</span>
<span id="L57" class="LineNr"> 57 </span><span class="Statement">do</span>
<span id="L58" class="LineNr"> 58 </span>        <span class="Identifier">FILEPOST+</span>=<span class="PreProc">(</span> <span class="Statement">&quot;</span><span class="PreProc">$REPLY</span><span class="Special">&quot;</span> <span class="PreProc">)</span>
<span id="L59" class="LineNr"> 59 </span><span class="Statement">done</span> <span class="Statement">&lt;&lt;&lt;</span> <span class="Statement">&quot;</span><span class="PreProc">$(</span><span class="Special"> </span><span class="Statement">printf</span><span class="Special"> </span><span class="Statement">'</span><span class="Constant">%s\n</span><span class="Statement">'</span><span class="Special"> */i.html </span><span class="Statement">|</span><span class="Special"> </span><span class="Statement">sort</span><span class="Special"> </span><span class="Special">-nr</span><span class="Special"> </span><span class="PreProc">)</span><span class="Statement">&quot;</span>
<span id="L60" class="LineNr"> 60 </span><span class="Statement">unset</span><span class="Identifier"> REPLY</span>
<span id="L61" class="LineNr"> 61 </span>
<span id="L62" class="LineNr"> 62 </span><span class="Comment">#check directory arrau is not empty</span>
<span id="L63" class="LineNr"> 63 </span><span class="Special">((</span> <span class="PreProc">${#</span><span class="PreProc">FILEPOST</span><span class="PreProc">[</span>@<span class="PreProc">]</span><span class="PreProc">}</span> <span class="Special">))</span> || <span class="Statement">exit</span> <span class="Constant">1</span>
<span id="L64" class="LineNr"> 64 </span>
<span id="L65" class="LineNr"> 65 </span>
<span id="L66" class="LineNr"> 66 </span><span class="Comment">#make post html pages from templates</span>
<span id="L67" class="LineNr"> 67 </span><span class="Statement">for</span> f <span class="Statement">in</span> <span class="Statement">&quot;</span><span class="PreProc">${</span><span class="PreProc">FILEPOST</span><span class="PreProc">[</span>@<span class="PreProc">]</span><span class="PreProc">}</span><span class="Statement">&quot;</span>
<span id="L68" class="LineNr"> 68 </span><span class="Statement">do</span>
<span id="L69" class="LineNr"> 69 </span>        <span class="Comment">#load post</span>
<span id="L70" class="LineNr"> 70 </span>        <span class="Comment">#meta tags, invert order</span>
<span id="L71" class="LineNr"> 71 </span>        <span class="Statement">while </span><span class="PreProc">IFS</span><span class="Statement">=</span><span class="Statement">  </span><span class="Statement">read</span>
<span id="L72" class="LineNr"> 72 </span><span class="Statement">        </span><span class="Statement">do</span>
<span id="L73" class="LineNr"> 73 </span>                <span class="Comment">#ignore head tags</span>
<span id="L74" class="LineNr"> 74 </span>                <span class="Special">[[</span> <span class="Statement">&quot;</span><span class="PreProc">$REPLY</span><span class="Special">&quot;</span> <span class="Statement">=</span> <span class="Constant">*\&lt;head\&gt;*</span> <span class="Special">]]</span> <span class="Statement">&amp;&amp;</span> <span class="Statement">continue</span>
<span id="L75" class="LineNr"> 75 </span>                <span class="Special">[[</span> <span class="Statement">&quot;</span><span class="PreProc">$REPLY</span><span class="Special">&quot;</span> <span class="Statement">=</span> <span class="Constant">*\&lt;/head\&gt;*</span> <span class="Special">]]</span> <span class="Statement">&amp;&amp;</span> <span class="Statement">break</span>
<span id="L76" class="LineNr"> 76 </span>
<span id="L77" class="LineNr"> 77 </span>                <span class="Comment">#add other tags to array in inverted order</span>
<span id="L78" class="LineNr"> 78 </span>                <span class="Statement">if </span><span class="Special">[[</span> <span class="Statement">-z</span> <span class="Statement">&quot;</span><span class="PreProc">${</span><span class="PreProc">articletags</span><span class="PreProc">[</span>*<span class="PreProc">]</span><span class="PreProc">}</span><span class="Special">&quot;</span> <span class="Special">]]</span>
<span id="L79" class="LineNr"> 79 </span>                <span class="Statement">then</span>
<span id="L80" class="LineNr"> 80 </span>                        <span class="Identifier">articletags</span>=<span class="PreProc">(</span> <span class="Statement">&quot;</span><span class="PreProc">$REPLY</span><span class="Special">&quot;</span> <span class="PreProc">)</span>
<span id="L81" class="LineNr"> 81 </span>                <span class="Statement">else</span>
<span id="L82" class="LineNr"> 82 </span>                        <span class="Identifier">articletags</span>=<span class="PreProc">(</span> <span class="Statement">&quot;</span><span class="PreProc">$REPLY</span><span class="Special">&quot;</span> <span class="Statement">&quot;</span><span class="PreProc">${</span><span class="PreProc">articletags</span><span class="PreProc">[</span>@<span class="PreProc">]</span><span class="PreProc">}</span><span class="Special">&quot;</span> <span class="PreProc">)</span>
<span id="L83" class="LineNr"> 83 </span>                <span class="Statement">fi</span>
<span id="L84" class="LineNr"> 84 </span>        <span class="Statement">done</span> <span class="Statement">&lt;</span> <span class="Statement">&quot;</span><span class="PreProc">$f</span><span class="Special">&quot;</span>
<span id="L85" class="LineNr"> 85 </span>
<span id="L86" class="LineNr"> 86 </span>
<span id="L87" class="LineNr"> 87 </span>        <span class="Comment">#load template top</span>
<span id="L88" class="LineNr"> 88 </span>        <span class="Identifier">template_top</span>=<span class="Statement">&quot;</span><span class="PreProc">$(</span><span class="Special"> </span><span class="Statement">&lt;</span><span class="Special"> </span><span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_POSTTOP</span><span class="Special">&quot;</span><span class="Special"> </span><span class="PreProc">)</span><span class="Special">&quot;</span>
<span id="L89" class="LineNr"> 89 </span>        <span class="Identifier">template_bottom</span>=<span class="Statement">&quot;</span><span class="PreProc">$(</span><span class="Special"> </span><span class="Statement">&lt;</span><span class="Special"> </span><span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_POSTBOTTOM</span><span class="Special">&quot;</span><span class="Special"> </span><span class="PreProc">)</span><span class="Special">&quot;</span>
<span id="L90" class="LineNr"> 90 </span>
<span id="L91" class="LineNr"> 91 </span>        <span class="Comment">#add metatags after '&lt;meta htt-equiv', this is a unique mark.</span>
<span id="L92" class="LineNr"> 92 </span>        <span class="Comment">#it could be after &lt;head&gt;, or after a &lt;!-- placeholder --&gt; mark, too..</span>
<span id="L93" class="LineNr"> 93 </span>        <span class="Identifier">n</span>=<span class="Statement">'</span><span class="Constant">&lt;meta http-equiv.*</span><span class="Statement">'</span>
<span id="L94" class="LineNr"> 94 </span>        <span class="Statement">for</span> m <span class="Statement">in</span> <span class="Statement">&quot;</span><span class="PreProc">${</span><span class="PreProc">articletags</span><span class="PreProc">[</span>@<span class="PreProc">]</span><span class="PreProc">}</span><span class="Special">&quot;</span>
<span id="L95" class="LineNr"> 95 </span>        <span class="Statement">do</span>
<span id="L96" class="LineNr"> 96 </span>                <span class="Identifier">template_top</span>=<span class="Statement">&quot;</span><span class="PreProc">$(</span><span class="Special"> </span><span class="Statement">sed</span><span class="Special"> </span><span class="Special">-E</span><span class="Special"> </span><span class="Statement">&quot;</span><span class="Constant">s|</span><span class="PreProc">${</span><span class="PreProc">n</span><span class="PreProc">}</span><span class="Constant">|&amp;</span><span class="Special">\n</span><span class="PreProc">${</span><span class="PreProc">m</span><span class="PreProc">}</span><span class="Constant">|</span><span class="Special">&quot;</span><span class="Special"> </span><span class="Statement">&lt;&lt;&lt;</span><span class="Statement">&quot;</span><span class="PreProc">$template_top</span><span class="Special">&quot;</span><span class="Special"> </span><span class="PreProc">)</span><span class="Special">&quot;</span>
<span id="L97" class="LineNr"> 97 </span>        <span class="Statement">done</span>
<span id="L98" class="LineNr"> 98 </span>
<span id="L99" class="LineNr"> 99 </span>
<span id="L100" class="LineNr">100 </span>        <span class="Comment">#load post article text</span>
<span id="L101" class="LineNr">101 </span>        <span class="Identifier">article</span>=<span class="Statement">&quot;</span><span class="PreProc">$(</span><span class="Special"> </span><span class="Statement">sed</span><span class="Special"> </span><span class="Special">-n</span><span class="Special"> </span><span class="Statement">'</span><span class="Constant">/&lt;article&gt;/,/&lt;\/article&gt;/p</span><span class="Statement">'</span><span class="Special"> </span><span class="Statement">&quot;</span><span class="PreProc">$f</span><span class="Special">&quot;</span><span class="Special"> </span><span class="PreProc">)</span><span class="Special">&quot;</span>
<span id="L102" class="LineNr">102 </span>
<span id="L103" class="LineNr">103 </span>        <span class="Comment">#set post index.html path</span>
<span id="L104" class="LineNr">104 </span>        <span class="Identifier">targetpost</span>=<span class="Statement">&quot;</span><span class="PreProc">${</span><span class="PreProc">f</span><span class="Statement">/</span>i.html<span class="Statement">/</span>index.html<span class="PreProc">}</span><span class="Special">&quot;</span>
<span id="L105" class="LineNr">105 </span>
<span id="L106" class="LineNr">106 </span>        <span class="Comment">#create target index.html</span>
<span id="L107" class="LineNr">107 </span>        <span class="Special">{</span>
<span id="L108" class="LineNr">108 </span>                <span class="Statement">echo</span><span class="Constant"> </span><span class="Statement">&quot;</span><span class="PreProc">$template_top</span><span class="Special">&quot;</span>
<span id="L109" class="LineNr">109 </span>                <span class="Statement">echo</span>
<span id="L110" class="LineNr">110 </span>                <span class="Statement">echo</span><span class="Constant"> </span><span class="Statement">&quot;</span><span class="PreProc">$article</span><span class="Special">&quot;</span>
<span id="L111" class="LineNr">111 </span>                <span class="Statement">echo</span>
<span id="L112" class="LineNr">112 </span>                <span class="Statement">echo</span><span class="Constant"> </span><span class="Statement">&quot;</span><span class="PreProc">$template_bottom</span><span class="Special">&quot;</span>
<span id="L113" class="LineNr">113 </span>                <span class="Comment">#or cat &quot;$TEMPLATE_POSTBOTTOM&quot;</span>
<span id="L114" class="LineNr">114 </span>        <span class="Special">}</span> <span class="Statement">&gt;</span> <span class="Statement">&quot;</span><span class="PreProc">$targetpost</span><span class="Special">&quot;</span>
<span id="L115" class="LineNr">115 </span>
<span id="L116" class="LineNr">116 </span>
<span id="L117" class="LineNr">117 </span>        <span class="Comment">#now buffer posts for concat.html</span>
<span id="L118" class="LineNr">118 </span>
<span id="L119" class="LineNr">119 </span>        <span class="Comment">#change src relative paths</span>
<span id="L120" class="LineNr">120 </span>        <span class="Identifier">s</span>=<span class="Statement">'</span><span class="Constant">(href|src)=</span><span class="Statement">'</span>
<span id="L121" class="LineNr">121 </span>        <span class="Identifier">ss</span>=<span class="Statement">'</span><span class="Constant">=&quot;\.\.\/</span><span class="Statement">'</span>
<span id="L122" class="LineNr">122 </span>        <span class="Identifier">sss</span>=<span class="Statement">'</span><span class="Constant">=&quot;</span><span class="Statement">'</span>
<span id="L123" class="LineNr">123 </span>
<span id="L124" class="LineNr">124 </span>        <span class="Identifier">article</span>=<span class="Statement">&quot;</span><span class="PreProc">$(</span><span class="Special"> </span><span class="Statement">&lt;&lt;&lt;</span><span class="Special"> </span><span class="Statement">&quot;</span><span class="PreProc">$article</span><span class="Special">&quot;</span><span class="Special"> </span><span class="Statement">sed</span><span class="Special"> </span><span class="Special">-E</span><span class="Special"> </span><span class="Statement">&quot;</span><span class="Constant">/</span><span class="PreProc">${</span><span class="PreProc">s</span><span class="PreProc">}</span><span class="Constant">/ s@</span><span class="PreProc">${</span><span class="PreProc">ss</span><span class="PreProc">}</span><span class="Constant">@</span><span class="PreProc">${</span><span class="PreProc">sss</span><span class="PreProc">}</span><span class="Constant">@g</span><span class="Special">&quot;</span><span class="Special"> </span><span class="PreProc">)</span><span class="Special">&quot;</span>
<span id="L125" class="LineNr">125 </span>
<span id="L126" class="LineNr">126 </span>        <span class="Comment">#append artcile to buffer</span>
<span id="L127" class="LineNr">127 </span>        <span class="Identifier">ARTS+</span>=<span class="Statement">&quot;</span>
<span id="L128" class="LineNr">128 </span>
<span id="L129" class="LineNr">129 </span><span class="Constant">&lt;br&gt;&lt;br&gt;</span>
<span id="L130" class="LineNr">130 </span><span class="PreProc">$article</span><span class="Special">&quot;</span>
<span id="L131" class="LineNr">131 </span>
<span id="L132" class="LineNr">132 </span>
<span id="L133" class="LineNr">133 </span>        <span class="Statement">unset</span><span class="Identifier"> f REPLY articletags template_top template_bottom n m article targetpost s ss sss</span>
<span id="L134" class="LineNr">134 </span><span class="Statement">done</span>
<span id="L135" class="LineNr">135 </span>
<span id="L136" class="LineNr">136 </span>
<span id="L137" class="LineNr">137 </span><span class="Comment">#concatenate posts</span>
<span id="L138" class="LineNr">138 </span><span class="Comment">#make new cat.html</span>
<span id="L139" class="LineNr">139 </span><span class="Special">{</span>
<span id="L140" class="LineNr">140 </span>        cat <span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_CATTOP</span><span class="Special">&quot;</span>
<span id="L141" class="LineNr">141 </span>        <span class="Statement">echo</span>
<span id="L142" class="LineNr">142 </span>        <span class="Statement">echo</span><span class="Constant"> </span><span class="Statement">&quot;</span><span class="PreProc">$ARTS</span><span class="Special">&quot;</span>
<span id="L143" class="LineNr">143 </span>        <span class="Statement">echo</span>
<span id="L144" class="LineNr">144 </span>        cat <span class="Statement">&quot;</span><span class="PreProc">$TEMPLATE_CATBOTTOM</span><span class="Special">&quot;</span>
<span id="L145" class="LineNr">145 </span><span class="Special">}</span> <span class="Statement">&gt;</span> <span class="Statement">&quot;</span><span class="PreProc">$TARGETCAT</span><span class="Statement">&quot;</span>
<span id="L146" class="LineNr">146 </span>
</pre>
</body>
</html>
<!-- vim: set foldmethod=manual : -->
